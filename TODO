Development Plan/Progress
-------------------------

[X]  Passthrough, readonly VFS
  [X]  Source
    [X]  Option parsing
    [X]  FUSE operations
      [-]  init
      [X]  getattr
      [X]  open
      [X]  read
      [X]  readdir
      [X]  release
      [-]  destroy
  [X]  Build chain
    [X]  Makefile
[X]  Iteration/Refactor 1
  [X]  Autotools for build
    [X]  HTSLib dependency
    [X]  GNULib dependency
    [X]  FUSE dependency
  [X]  Refactor
    [X]  Option parsing
      [X]  Don't need reference
    [X]  Global context
    [X]  Force read only
    [X]  General tidy
  [X]  Debugging / Logging
  [X]  FUSE operations
    [X]  FUSE file and directory information structs
    [?]  Ignore mount directory if recursive (see note 1)
    [X]  CRAM identification and virtual BAM injection
      [X]  CRAM checking
        [X]  by extension
        [X]  by magic
      [X]  opendir / readdir / releasedir
      [X]  open / read
    [X]  init
    [X]  destroy
  [X]  Bugs / Warnings
    [X]  Default source to pwd
    [X]  Options handling
[X]  CRAM-to-BAM conversion (linear seek)
  [X]  Fetch data
  [X]  Calculate converted BAM size (see note 2)
[ ]  Iteration/Refactor 2
  [X]  AUTHORS
  [ ]  Bugs
    [ ]  Recursive mount (see note 1)
    [X]  pread on normal files is filling the buffer with zeros
    [-]  segfault when attempting to access FUSE context in threads ???
    [X]  Static and dynamic analysis
  [ ]  Cache/precalculate converted BAM sizes
    [ ]  Max size initially, then correct when filesize calculated
      [X]  Set stat structure from cache
      [ ]  Special case when attempting to read the EOF
    [X]  Cache filesize and mtime (etc.) to disk, by path
      [X]  etc. => BAM index and mapping placeholders
    [ ]  ...
  [ ]  Refactor
    [ ]  Stream file in one swoop, rather than constantly restarting
    [ ]  Error/return checking in conversion routines
    [ ]  ...
  [ ]  Convert directly into memory (rather than pipe hack)
    [ ]  ...
  [X]  Write proper test scripts
    [X]  Testing script
    [X]  Integrate into autotools build
  [ ]  ...
[ ]  ...

Notes
-----

1. If the source directory contains the mount directory, it all goes
   horribly wrong! Unfortunately, there is apparently no way of
   ascertaining the location of the mount directory (because it's not
   necessarily static[*]), thus I don't see a way of checking for and
   then excluding anything that resolves to the mount directory.

   [*] http://fuse.996288.n3.nabble.com/Getting-the-mountpoint-from-within-a-fusemod-td11620.html

2. What should st_size be set to for the injected virtual BAM files? If
   I set it to zero, no `read` call is made. Apparently[*], it needs to
   be accurate so the EOF signal can be raised by the OS. Determining
   the size is really expensive, so hopefully there is a workaround.

   [*] http://stackoverflow.com/a/31940722

3. We are forced to set the virtual BAM file size to something
   arbitrarily large (e.g., SSIZE_MAX), rather than first specifying the
   file to be a FIFO and then converting to a regular file once the size
   has been calculated. This is because, apparently[*], FUSE's read and
   write operations only apply to regular files.

   [*] http://stackoverflow.com/a/32634594
