Development Plan/Progress
-------------------------

[X]  Passthrough, readonly VFS
  [X]  Source
    [X]  Option parsing
    [X]  FUSE operations
      [-]  init
      [X]  getattr
      [X]  open
      [X]  read
      [X]  readdir
      [X]  release
      [-]  destroy
  [X]  Build chain
    [X]  Makefile
[X]  Iteration/Refactor 1
  [X]  Autotools for build
    [X]  HTSLib dependency
    [X]  GNULib dependency
    [X]  FUSE dependency
  [X]  Refactor
    [X]  Option parsing
      [X]  Don't need reference
    [X]  Global context
    [X]  Force read only
    [X]  General tidy
  [X]  Debugging / Logging
  [X]  FUSE operations
    [X]  FUSE file and directory information structs
    [?]  Ignore mount directory if recursive (see note 1)
    [X]  CRAM identification and virtual BAM injection
      [X]  CRAM checking
        [X]  by extension
        [X]  by magic
      [X]  opendir / readdir / releasedir
      [X]  open / read
    [X]  init
    [X]  destroy
  [X]  Bugs / Warnings
    [X]  Default source to pwd
    [X]  Options handling
[X]  CRAM-to-BAM conversion (linear seek)
  [X]  Fetch data
  [X]  Calculate converted BAM size (see note 2)
[ ]  Iteration/Refactor 2
  [X]  AUTHORS
  [ ]  Bugs
    [ ]  Recursive mount (see note 1)
    [X]  pread on normal files is filling the buffer with zeros ???
    [-]  segfault when attempting to access FUSE context in threads ???
  [ ]  Refactor
    [ ]  Error/return checking in conversion routines
    [ ]  ...
  [ ]  Cache/precalculate converted BAM sizes
    [ ]  ...
  [ ]  Convert directly into memory (rather than pipe hack)
    [ ]  ...
  [ ]  Write proper test scripts
    [ ]  ...
  [ ]  ...
[ ]  ...

Notes
-----

1. If the source directory contains the mount directory, it all goes
   horribly wrong! Unfortunately, there is apparently no way of
   ascertaining the location of the mount directory (because it's not
   necessarily static[*]), thus I don't see a way of checking for and
   then excluding anything that resolves to the mount directory.

   [*] http://fuse.996288.n3.nabble.com/Getting-the-mountpoint-from-within-a-fusemod-td11620.html

2. What should st_size be set to for the injected virtual BAM files? If
   I set it to zero, no `read` call is made. Apparently[*], it needs to
   be accurate so the EOF signal can be raised by the OS. Determining
   the size is really expensive, so hopefully there is a workaround.

   [*] http://stackoverflow.com/a/31940722
